/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(158)
	var __weex_style__ = __webpack_require__(159)
	var __weex_script__ = __webpack_require__(160)
	
	__weex_define__('@weex-component/55dab8e61d8be00ee63530b305b94cb5', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})
	
	__weex_bootstrap__('@weex-component/55dab8e61d8be00ee63530b305b94cb5',undefined,undefined)

/***/ },

/***/ 93:
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "navbar-con"
	  ],
	  "children": [
	    {
	      "type": "div",
	      "classList": [
	        "navbar"
	      ],
	      "children": [
	        {
	          "type": "div",
	          "classList": [
	            "btn-back"
	          ],
	          "events": {
	            "click": "goHome"
	          },
	          "children": [
	            {
	              "type": "image",
	              "classList": [
	                "btn-arrow-left"
	              ],
	              "attr": {
	                "src": "http://img1.vued.vanthink.cn/vued9c8e7e738ff94abee23eb69d7f1401e9.png"
	              }
	            },
	            {
	              "type": "text",
	              "classList": [
	                "btn-text"
	              ],
	              "attr": {
	                "value": "返回"
	              }
	            }
	          ]
	        },
	        {
	          "type": "text",
	          "classList": [
	            "title"
	          ],
	          "attr": {
	            "value": function () {return this.title}
	          }
	        }
	      ]
	    }
	  ]
	}

/***/ },

/***/ 94:
/***/ function(module, exports) {

	module.exports = {
	  "navbar-con": {
	    "height": 108,
	    "paddingTop": 20
	  },
	  "navbar": {
	    "zIndex": 1000,
	    "position": "relative",
	    "display": "flex",
	    "flexDirection": "row",
	    "height": 88,
	    "backgroundColor": "#ffffff",
	    "alignItems": "center",
	    "borderBottomWidth": 2,
	    "borderBottomColor": "#dddddd"
	  },
	  "btn-back": {
	    "zIndex": 1002,
	    "flexDirection": "row",
	    "alignItems": "center",
	    "width": 180,
	    "height": 88
	  },
	  "btn-arrow-left": {
	    "width": 60,
	    "height": 60,
	    "marginLeft": 10
	  },
	  "btn-text": {
	    "color": "#0f89f5"
	  },
	  "title": {
	    "position": "absolute",
	    "left": 180,
	    "right": 180,
	    "top": 0,
	    "height": 88,
	    "lineHeight": 88,
	    "fontSize": 36,
	    "textAlign": "center"
	  }
	}

/***/ },

/***/ 95:
/***/ function(module, exports) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	var navigator = __weex_require__('@weex-module/navigator');
	module.exports = {
	  methods: {
	    goHome: function goHome() {
	      navigator.pop();
	    }
	  }
	};}
	/* generated by weex-loader */


/***/ },

/***/ 103:
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(93)
	var __weex_style__ = __webpack_require__(94)
	var __weex_script__ = __webpack_require__(95)
	
	__weex_define__('@weex-component/navbar', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})


/***/ },

/***/ 158:
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "container"
	  ],
	  "children": [
	    {
	      "type": "navbar",
	      "attr": {
	        "title": "地图搜索"
	      }
	    },
	    {
	      "type": "weex-amap",
	      "classList": [
	        "map"
	      ],
	      "id": "map2017",
	      "attr": {
	        "search": function () {return this.search},
	        "sdkKey": function () {return this.keys},
	        "zoom": function () {return this.zoom},
	        "center": function () {return this.pos}
	      },
	      "children": [
	        {
	          "type": "weex-amap-marker",
	          "attr": {
	            "position": function () {return this.marker.position},
	            "title": function () {return this.marker.title}
	          },
	          "repeat": {
	            "expression": function () {return this.markers},
	            "value": "marker"
	          }
	        }
	      ]
	    },
	    {
	      "type": "div",
	      "classList": [
	        "map-search"
	      ],
	      "children": [
	        {
	          "type": "input",
	          "classList": [
	            "input"
	          ],
	          "events": {
	            "change": "change"
	          },
	          "attr": {
	            "placeholder": "Search Places..."
	          }
	        },
	        {
	          "type": "div",
	          "classList": [
	            "btn-search"
	          ],
	          "events": {
	            "click": "searchEvent"
	          },
	          "children": [
	            {
	              "type": "image",
	              "style": {
	                "width": 60,
	                "height": 60
	              },
	              "attr": {
	                "src": "http://img1.vued.vanthink.cn/vuedea56601586fafc6cb665126938506b35.png"
	              }
	            }
	          ]
	        }
	      ]
	    },
	    {
	      "type": "div",
	      "classList": [
	        "map-bttom-bar"
	      ],
	      "children": [
	        {
	          "type": "div",
	          "classList": [
	            "btn-sm"
	          ],
	          "events": {
	            "click": function ($event) {this.changeType('电影',$event)}
	          },
	          "children": [
	            {
	              "type": "text",
	              "shown": function () {return this.type!='电影'},
	              "classList": [
	                "btn-sm-text"
	              ],
	              "attr": {
	                "value": "电影"
	              }
	            },
	            {
	              "type": "text",
	              "shown": function () {return this.type=='电影'},
	              "classList": [
	                "btn-sm-text",
	                "active"
	              ],
	              "attr": {
	                "value": "电影"
	              }
	            }
	          ]
	        },
	        {
	          "type": "div",
	          "classList": [
	            "btn-sm"
	          ],
	          "events": {
	            "click": function ($event) {this.changeType('ATM',$event)}
	          },
	          "children": [
	            {
	              "type": "text",
	              "shown": function () {return this.type!='ATM'},
	              "classList": [
	                "btn-sm-text"
	              ],
	              "attr": {
	                "value": "ATM"
	              }
	            },
	            {
	              "type": "text",
	              "shown": function () {return this.type=='ATM'},
	              "classList": [
	                "btn-sm-text",
	                "active"
	              ],
	              "attr": {
	                "value": "ATM"
	              }
	            }
	          ]
	        },
	        {
	          "type": "div",
	          "classList": [
	            "btn-sm"
	          ],
	          "events": {
	            "click": function ($event) {this.changeType('快餐',$event)}
	          },
	          "children": [
	            {
	              "type": "text",
	              "shown": function () {return this.type!='快餐'},
	              "classList": [
	                "btn-sm-text"
	              ],
	              "attr": {
	                "value": "快餐"
	              }
	            },
	            {
	              "type": "text",
	              "shown": function () {return this.type=='快餐'},
	              "classList": [
	                "btn-sm-text",
	                "active"
	              ],
	              "attr": {
	                "value": "快餐"
	              }
	            }
	          ]
	        },
	        {
	          "type": "div",
	          "classList": [
	            "btn-sm"
	          ],
	          "events": {
	            "click": function ($event) {this.changeType('酒店',$event)}
	          },
	          "children": [
	            {
	              "type": "text",
	              "shown": function () {return this.type!='酒店'},
	              "classList": [
	                "btn-sm-text"
	              ],
	              "attr": {
	                "value": "酒店"
	              }
	            },
	            {
	              "type": "text",
	              "shown": function () {return this.type=='酒店'},
	              "classList": [
	                "btn-sm-text",
	                "active"
	              ],
	              "attr": {
	                "value": "酒店"
	              }
	            }
	          ]
	        }
	      ]
	    }
	  ]
	}

/***/ },

/***/ 159:
/***/ function(module, exports) {

	module.exports = {
	  "container": {
	    "position": "relative",
	    "flex": 1,
	    "flexDirection": "column",
	    "backgroundColor": "#ffffff"
	  },
	  "map-search": {
	    "flexDirection": "row",
	    "alignItems": "center",
	    "position": "absolute",
	    "top": 108,
	    "left": 20,
	    "right": 20,
	    "height": 88,
	    "paddingLeft": 10,
	    "backgroundColor": "#ffffff",
	    "borderRadius": 5,
	    "borderBottomWidth": 2,
	    "borderRightWidth": 1,
	    "borderColor": "rgba(0,0,0,0.2)"
	  },
	  "input": {
	    "flex": 1,
	    "backgroundColor": "#ffffff",
	    "height": 70,
	    "marginTop": 9,
	    "fontSize": 30
	  },
	  "btn-search": {
	    "justifyContent": "center",
	    "alignSelf": "flex-end",
	    "width": 88,
	    "height": 88
	  },
	  "map": {
	    "flex": 1,
	    "position": "relative",
	    "backgroundColor": "#ffffff",
	    "minHeight": 400,
	    "borderBottomWidth": 10,
	    "borderBottomColor": "#ffffff"
	  },
	  "map-bttom-bar": {
	    "flexDirection": "row",
	    "alignItems": "center",
	    "zIndex": 200,
	    "position": "absolute",
	    "bottom": 0,
	    "left": 0,
	    "right": 0,
	    "height": 88,
	    "lineHeight": 88,
	    "backgroundColor": "#ffffff",
	    "borderTopWidth": 1,
	    "borderTopColor": "rgba(0,0,0,0.15)"
	  },
	  "btn-sm": {
	    "flex": 1,
	    "justifyContent": "center",
	    "alignItems": "center"
	  },
	  "btn-sm-text": {
	    "color": "#777777",
	    "fontSize": 28
	  },
	  "active": {
	    "color": "#1ba1e2"
	  }
	}

/***/ },

/***/ 160:
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	__webpack_require__(103);
	var Amap = null;
	try {
	  Amap = __weex_require__('@weex-module/amap');
	} catch (err) {
	  console.log(err);
	}
	var modal = __weex_require__('@weex-module/modal');
	module.exports = {
	  data: function () {return {
	    keys: {
	      h5: 'f4b99dcd51752142ec0f1bdcb9a8ec02',
	      ios: '',
	      android: 'db6a973159cb0c2639ad02c617a786ae'
	    },
	    pos: [104.093731, 30.675117],
	    zoom: 13,
	    search: {
	      city: '成都'
	    },
	    place: '',
	    markers: [],
	    type: ''
	  }},
	
	  methods: {
	    change: function change(event) {
	      this.place = event.value;
	    },
	    searchEvent: function searchEvent() {
	      if (!this.place) {
	        modal.alert({
	          message: 'empty word'
	        });
	        return;
	      }
	      Amap.search(this.place, function (res) {
	        if (res.result == 'success') {
	          (function () {
	            var newarr = [];
	            if (res.data.info === 'OK') {
	              var arr = res.data.poiList.pois;
	
	              arr.forEach(function (item) {
	                newarr.push({
	                  title: item.name,
	                  position: [item.location.L, item.location.I]
	                });
	              });
	            }
	          })();
	        } else {
	          modal.alert({
	            message: res.data
	          });
	        }
	      });
	    },
	    changeType: function changeType(q) {
	      this.type = q;
	      Amap.searchNearBy(this.type, this.pos, 1000, function (res) {
	        if (res.result == 'success') {
	          (function () {
	            var newarr = [];
	            if (res.data.info === 'OK') {
	              var arr = res.data.poiList.pois;
	
	              arr.forEach(function (item) {
	                newarr.push({
	                  title: item.name,
	                  position: [item.location.L, item.location.I]
	                });
	              });
	            }
	          })();
	        } else {
	          modal.alert({
	            message: res.data
	          });
	        }
	      });
	    }
	  }
	};}
	/* generated by weex-loader */


/***/ }

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,